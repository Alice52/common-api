# 日志脱敏
log-desensitize:
  # 是否忽略大小写匹配，默认为true
  ignore: true
  # 是否开启脱敏，默认为false
  open: true
  # pattern下的key/value为固定脱敏规则
  pattern:
    # 邮箱 - @前第4-7位脱敏
    email: "@>(4,7)"
    # qq邮箱 - @后1-3位脱敏
    qqemail: "@<(1,3)"
    # 姓名 - 姓脱敏，如*杰伦
    name: 1,1
    # 密码 - 所有需要完全脱敏的都可以使用内置的password
    password: password
    # 身份证号
    identity: 9,13
  patterns:
    # 一个字段根据多种值含义进行自定义脱敏: username字段的值可以是手机号、也可以是邮箱, 这个值动态改变的
    - key: username
      custom:
        # 手机号 - 11位
        - defaultRegex: phone
          position : 4,7
        # 邮箱 - @
        - defaultRegex: email
          position : "@>(3,12)"
        # 身份证 - 15/18位
        - defaultRegex: identity
          position : 1,3
        # 自定义正则
        - customRegex: "^1[0-9]{10}"
          position : 1,3
        # 都匹配不到时，按照这种规则来
        - defaultRegex: other
          position : 1,3

    # 电话号码，key后面的字段都可以匹配以下规则(用逗号分隔)
    - key: phone,cellphone,mobile
      custom:
        # 手机号 - 内置的11位手机匹配规则
        - defaultRegex: phone
          position: 4,7
        # 自定义正则匹配表达式：座机号(带区号，号码七位|八位)
        - customRegex: "^0[0-9]{2,3}-[0-9]{7,8}"
          # -后面的1-4位脱敏
          position: "-<(1,4)"
        # 自定义正则匹配表达式：座机号(不带区号)
        - customRegex: "^[0-9]{7,8}"
          position: 3,5
        # 内置的other表示如果其他规则都无法匹配到，则按该规则处理
        - defaultRegex: other
          position: 1,3
    # 这种方式不太推荐 - 一旦匹配不上，就不会脱敏
    - key: localMobile
      custom:
        customRegex: "^0[0-9]{2,3}-[0-9]{7,8}"
        position: 1,3
